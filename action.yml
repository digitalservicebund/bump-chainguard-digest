name: "Bump chainguard digest"
description: "Bumps digests of chainguard images. For nightly jobs."

inputs:
  image_name:
    required: true
    description: "Name of the image to check for (e.g. nginx)."
  file_path:
    required: true
    description: "Path to the file where the image is located (e.g frontend/Dockerfile)."
  github_token:
    required: true
    description: "GitHub token for API access."

permissions:
  contents: write

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Construct full image name for ${{ inputs.image_name }}
      shell: bash
      run: |
        set -ex
        echo "FULL_IMAGE_NAME=cgr.dev/chainguard/${{ inputs.image_name }}:latest" >> $GITHUB_ENV
    - name: Pull latest image
      shell: bash
      run: |
        set -ex
        docker pull $FULL_IMAGE_NAME
    - name: Get newest digest
      shell: bash
      run: |
        set -ex
        echo "IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $FULL_IMAGE_NAME | cut -d'@' -f2)" >> $GITHUB_ENV
    - name: Update digests in the repository
      shell: bash
      run: |
        set -ex
        sed -i -E "s|(${{ inputs.image_name }}@)[^ ]*|\1$IMAGE_DIGEST|g" ${{ inputs.file_path }}
    - name: Check for changes
      shell: bash
      id: check_changes
      run: |
        set -ex
        git diff --exit-code || echo "files_changed=yes" >> $GITHUB_ENV
    - name: Commit changes using GitHub REST API
      shell: bash
      if: env.files_changed == 'yes'
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        export MESSAGE="Bump chainguard image for ${{ inputs.image_name }}"
        export FILE_TO_COMMIT=${{ inputs.file_path }}
        export SHA=$(git rev-parse HEAD:$FILE_TO_COMMIT)
        export CONTENT=$(base64 -i $FILE_TO_COMMIT)
        gh api --method PUT /repos/:owner/:repo/contents/$FILE_TO_COMMIT \
          --field message="$MESSAGE" \
          --field content="$CONTENT" \
          --field encoding="base64" \
          --field branch="main" \
          --field sha="$SHA"
