name: "Bump chainguard digest"
description: "Bumps digests of chainguard images via pull request."

inputs:
  image_name:
    required: true
    description: "Name of the image to check for (e.g. nginx)."
  file_path:
    required: true
    description: "Path to the file where the image is located (e.g frontend/Dockerfile)."
  auto_merge:
    required: false
    default: "true"
    description: "Whether to auto-merge the PR created (defaults to true)."
  github_token:
    required: true
    description: "GitHub token for pushing changes."

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Construct full image name for ${{ inputs.image_name }}
      shell: bash
      run: |
        set -ex
        echo "FULL_IMAGE_NAME=cgr.dev/chainguard/${{ inputs.image_name }}:latest" >> $GITHUB_ENV
    - name: Pull latest image
      shell: bash
      run: |
        set -ex
        docker pull $FULL_IMAGE_NAME
    - name: Get newest digest
      shell: bash
      run: |
        set -ex
        echo "IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $FULL_IMAGE_NAME | cut -d'@' -f2)" >> $GITHUB_ENV
    - name: Update digests in the repository
      shell: bash
      run: |
        set -ex
        sed -i -E "s|(${{ inputs.image_name }}@)[^ ]*|\1$IMAGE_DIGEST|g" ${{ inputs.file_path }}
    - name: Check for changes
      shell: bash
      run: |
        set -ex
        git diff --exit-code || echo "files_changed=yes" >> $GITHUB_ENV
    - name: Set branch name for pull request
      if: env.files_changed == 'yes'
      shell: bash
      run: |
        set -ex
        export IMAGE_SHA=`echo $IMAGE_DIGEST| cut -d : -f 2`
        echo "IMAGE_SHA=$IMAGE_SHA" >> $GITHUB_ENV
        echo "PR_BRANCH=bump-chainguard-digest/${{ inputs.file_path }}/${{ inputs.image_name }}-$IMAGE_SHA" >> $GITHUB_ENV
    - name: Create Pull Request
      if: env.files_changed == 'yes'
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        set -ex
        git config user.name "${{ github.workflow }}"
        # This email identifies the commit as GitHub Actions - see https://github.com/orgs/community/discussions/26560
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git checkout -b $PR_BRANCH
        git add ${{ inputs.file_path }}
        git commit -m "chore(deps): bump chainguard image ${{ inputs.image_name }} to $IMAGE_SHA"
        git push -f origin $PR_BRANCH
        gh pr create --fill
    - name: Auto-merge Pull Request
      if: (inputs.auto_merge == 'true') && (env.files_changed == 'yes')
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      shell: bash
      run: |
        set -ex
        gh pr merge --auto --merge $PR_BRANCH
